name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: win-python
  WINDOWS_VERSION: 1809

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          docker build . --file Dockerfile --build-arg WINDOWS_VERSION=$env:WINDOWS_VERSION
          # TODO: Rewrite in PowerShell
          # if [ -f docker-compose.test.yml ]; then
          #   docker-compose --file docker-compose.test.yml build
          #   docker-compose --file docker-compose.test.yml run sut
          # else
          #   docker build . --file Dockerfile
          # fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: windows-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $env:IMAGE_NAME --build-arg WINDOWS_VERSION=$env:WINDOWS_VERSION

      - name: Docker Hub login
        uses: azure/docker-login@v1
        with:
          username: bdwyertech
          password: ${{ secrets.DOCKERHUB_KEY }}

      - name: Push image to GitHub Container Registry
        run: |
          docker push bdwyertech/$env:IMAGE_NAME:latest
#          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
#
#          # Change all uppercase to lowercase
#          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#
#          # Strip git ref prefix from version
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
#
#          # Strip "v" prefix from tag name
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#
#          # Use Docker `latest` tag convention
#          [ "$VERSION" == "master" ] && VERSION=latest
#
#          echo IMAGE_ID=$IMAGE_ID
#          echo VERSION=$VERSION
#
#          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
